{"version":3,"sources":["database/config.js","redux/action.js","components/Title.js","components/Photo.js","components/PhotoWall.js","components/AddPhoto.js","components/Main.js","components/App.js","redux/reducer.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","loadPostFromDatabase","dispatch","ref","once","then","snapShot","posts","forEach","childSnapShot","push","val","loadPost","catch","err","console","log","addPostToDatabase","post","update","id","addPost","error","removePostFromDatabase","index","remove","removePost","type","Title","this","props","Component","Photo","className","src","imageLink","alt","description","onClick","PhotoWall","to","sort","x","y","map","key","AddPhoto","handleSubmit","bind","event","preventDefault","link","target","elements","value","Number","Date","onHistory","onSubmit","placeholder","name","Main","exact","path","render","history","App","connect","state","bindActionCreators","action","rootReducer","slice","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ec1b764f.chunk.js","sourcesContent":["import * as firebase from \"firebase\";\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDsL2Wqo7JuGvoRdC9OGCM1kgSQnEjRdg0\",\r\n  authDomain: \"photowall-fed6b.firebaseapp.com\",\r\n  databaseURL: \"https://photowall-fed6b.firebaseio.com\",\r\n  projectId: \"photowall-fed6b\",\r\n  storageBucket: \"photowall-fed6b.appspot.com\",\r\n  messagingSenderId: \"309997986645\",\r\n  appId: \"1:309997986645:web:9aebca64745479491ec5dc\",\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst database = firebase.database();\r\n\r\nexport { database };\r\n","import { database } from \"../database/config\";\r\n\r\nexport function loadPostFromDatabase() {\r\n  return (dispatch) => {\r\n    return database\r\n      .ref(\"posts\")\r\n      .once(\"value\")\r\n      .then((snapShot) => {\r\n        let posts = [];\r\n        snapShot.forEach((childSnapShot) => {\r\n          posts.push(childSnapShot.val());\r\n        });\r\n        dispatch(loadPost(posts));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n}\r\n\r\nexport function addPostToDatabase(post) {\r\n  return (dispatch) => {\r\n    return database\r\n      .ref(\"posts\")\r\n      .update({ [post.id]: post })\r\n      .then(() => {\r\n        dispatch(addPost(post));\r\n      })\r\n      .catch((error) => {\r\n        console.log(`error from db ${error}`);\r\n      });\r\n  };\r\n}\r\n\r\nexport function removePostFromDatabase(index, id) {\r\n  return (dispatch) => {\r\n    return database\r\n      .ref(`posts/${id}`)\r\n      .remove()\r\n      .then(() => {\r\n        dispatch(removePost(index));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n}\r\n\r\nexport function loadPost(post) {\r\n  return {\r\n    type: \"LOAD\",\r\n    post,\r\n  };\r\n}\r\n\r\nexport function addPost(post) {\r\n  return {\r\n    type: \"ADD\",\r\n    post,\r\n  };\r\n}\r\n\r\nexport function removePost(index) {\r\n  return {\r\n    type: \"REMOVE\",\r\n    index,\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nclass Title extends Component {\r\n  render() {\r\n    return <h1> {this.props.Title} </h1>;\r\n  }\r\n}\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Photo(props) {\r\n  const post = props.post;\r\n  return (\r\n    <figure className=\"figure\">\r\n      <img className=\"photo\" src={post.imageLink} alt={post.description} />\r\n      <figcaption>\r\n        <p>{post.description}</p>\r\n      </figcaption>\r\n      <div className=\"button-container\">\r\n        <button\r\n          className=\"remove-button\"\r\n          onClick={() => {\r\n            props.removePostFromDatabase(props.index, props.id);\r\n          }}\r\n        >\r\n          Remove\r\n        </button>\r\n      </div>\r\n    </figure>\r\n  );\r\n}\r\n\r\nPhoto.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n};\r\nexport default Photo;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Photo from \"./Photo\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction PhotoWall(props) {\r\n  return (\r\n    <div>\r\n      <Link className=\"addIcon\" to=\"/addPhotos\" />\r\n      <div className=\"photoGrid\">\r\n        {props.posts.sort((x, y) => {\r\n          return y.id - x.id;\r\n        }).map((post, index) => (\r\n          <Photo key={index} post={post} index={index} {...props} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nPhotoWall.propTypes = {\r\n  post: PropTypes.array,\r\n};\r\n\r\nexport default PhotoWall;\r\n","import React, { Component } from \"react\";\r\n\r\nclass AddPhoto extends Component {\r\n  constructor() {\r\n    super();\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const link = event.target.elements.link.value;\r\n    const description = event.target.elements.description.value;\r\n    const post = {\r\n      id: Number(new Date()),\r\n      description: description,\r\n      imageLink: link,\r\n    };\r\n    if (link && description) {\r\n      this.props.addPostToDatabase(post);\r\n      this.props.onHistory.push(\"/\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Photowall</h1>\r\n        <div className=\"form\">\r\n          <form onSubmit={this.handleSubmit}>\r\n            <input type=\"text\" placeholder=\"Link\" name=\"link\"></input>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Description\"\r\n              name=\"description\"\r\n            ></input>\r\n            <button>Post</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddPhoto;\r\n","import React, { Component } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport Title from \"./Title\";\r\nimport PhotoWall from \"./PhotoWall\";\r\nimport AddPhoto from \"./AddPhoto\";\r\n\r\nclass Main extends Component {\r\n\r\n  componentDidMount(){\r\n    this.props.loadPostFromDatabase();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          render={() => (\r\n            <div>\r\n              <Title Title={\"Covid 2019\"} />\r\n              <PhotoWall {...this.props} />\r\n            </div>\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/addPhotos\"\r\n          render={({history}) => <AddPhoto {...this.props} onHistory={history} />}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport * as action from \"../redux/action\";\r\nimport Main from \"../components/Main\";\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    posts: state,\r\n  };\r\n}\r\n\r\n function mapDispatchToProps(dispatch) {\r\n   return bindActionCreators(action , dispatch);\r\n }\r\nconst App = connect(mapStateToProps,mapDispatchToProps)(Main);\r\n\r\nexport default App;\r\n","const rootReducer = function (state = [], action) {\r\n  switch (action.type) {\r\n    case \"REMOVE\":\r\n      return [\r\n        ...state.slice(0, action.index),\r\n        ...state.slice(action.index + 1),\r\n      ];\r\n    case \"ADD\":\r\n      return [...state, action.post];\r\n    case \"LOAD\":\r\n      return action.post;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n\r\nimport App from \"./components/App\";\r\nimport \"./stylesheets/style.css\";\r\nimport rootReducer from \"./redux/reducer\";\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}